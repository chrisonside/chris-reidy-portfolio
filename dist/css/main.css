@charset "UTF-8";
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/**
*
* Border-box sizing by default
*
**/
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

/**
*
* Base font size for REM usage
*
**/
html {
  height: 100%;
  font-size: 62.5%; }

/**
*
* Clearfix
*
**/
.cf:after {
  content: "";
  display: table;
  clear: both; }

/**
*
* Vertical align
*
**/
/**
*
* Z-index levels
*
**/
/**
*
* REM mixin with pixel fallback
* -- Eduardo Bou√ßas (https://github.com/eduardoboucas/)
*
* NOTE: You must set the font-size to 62.5% on the html element!
*
**/
/**
*
* Import fonts
*
**/
/**
*
* Page width constrain. Set the max and minimum width and use `@extend %constrain` to constrain the width.
*
**/
.grid, .skills__container, .example, .interests__container, .examples__container, .contact__container {
  max-width: 1024px;
  margin: 0 auto; }

body {
  font-size: 16px;
  font-size: 1.6rem;
  font-family: "Merriweather", georgia, serif;
  color: #333;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

/**
*
* Vertical rhythm
*
**/
h1, h2, h3, h4, p, .example, .example__image, .interest, .contact__details {
  margin-bottom: 20px; }

/**
*
* Padding settings
*
**/
/**
*
* Standard section padding
*
**/
section {
  padding: 45px 15px; }

/**
*
* Font sizes
*
**/
h1 {
  font-size: 45px;
  font-size: 4.5rem;
  line-height: 52px;
  line-height: 5.2rem;
  font-family: "Montserrat", Arial, Helvetica, sans-serif;
  font-weight: 800; }
  @media (min-width: 768px) {
    h1 {
      font-size: 85px;
      font-size: 8.5rem;
      line-height: 92px;
      line-height: 9.2rem; } }

h2 {
  font-size: 22px;
  font-size: 2.2rem;
  line-height: 29px;
  line-height: 2.9rem; }
  @media (min-width: 768px) {
    h2 {
      font-size: 26px;
      font-size: 2.6rem;
      line-height: 31px;
      line-height: 3.1rem; } }

h3 {
  font-size: 21px;
  font-size: 2.1rem;
  line-height: 25px;
  line-height: 2.5rem; }
  @media (min-width: 768px) {
    h3 {
      font-size: 24px;
      font-size: 2.4rem;
      line-height: 28px;
      line-height: 2.8rem; } }

h4 {
  font-size: 19px;
  font-size: 1.9rem;
  line-height: 23px;
  line-height: 2.3rem; }
  @media (min-width: 768px) {
    h4 {
      font-size: 21px;
      font-size: 2.1rem;
      line-height: 25px;
      line-height: 2.5rem; } }

p {
  font-size: 18px;
  font-size: 1.8rem;
  line-height: 25px;
  line-height: 2.5rem; }

.grid, .skills__container, .example, .interests__container {
  font-size: 0; }

.grid__item, .interest {
  display: inline-block;
  vertical-align: top;
  width: 100%;
  height: 0;
  padding-bottom: 100%;
  border: 1px solid white; }

.nav {
  position: fixed;
  top: 0;
  width: 100%;
  padding: 20px;
  text-align: right;
  background: #000; }

.nav__items {
  list-style-type: none;
  font-size: 0; }

.nav__item {
  font-size: 16px;
  font-size: 1.6rem;
  font-size: 18px;
  font-size: 1.8rem;
  display: inline-block;
  width: 25%;
  text-align: center; }

.nav__link {
  color: #fff;
  text-decoration: none; }

.hero {
  /* First set up ratio sizes for hero section */
  width: 100%;
  height: 0;
  padding-bottom: 100%;
  position: relative;
  overflow: hidden;
  /* Now insert the bg image - promoting this to it's own layer for smooth scrolling */
  /* Background color overlay */ }
  @media (min-width: 1024px) {
    .hero {
      padding-bottom: 50%; } }
  .hero:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #000 url("/img/bgimage__1000x1000.jpg") no-repeat center center;
    background-size: cover;
    z-index: -9;
    will-change: transform; }
    @media (min-width: 768px) {
      .hero:after {
        background: #000 url("/img/bgimage__1500x750.jpg") no-repeat center center; } }
  .hero:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(20, 190, 204, 0.8); }

.hero__text {
  position: absolute;
  top: 50%;
  right: 25px;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  text-align: right; }

.hero__heading {
  color: #fff; }

.skills {
  background: #fff; }

.skill {
  /* @extend .grid__item; - DO  I NEED THIS ANYMORE?! */
  width: 38%;
  display: inline-block;
  vertical-align: top;
  margin-right: 8%;
  margin-left: 8%;
  margin-bottom: 8%;
  position: relative;
  text-align: center; }
  .skill:nth-child(1) .skill__placeholder {
    background: #14BECC; }
  .skill:nth-child(2) .skill__placeholder {
    background: #00FF83; }
  .skill:nth-child(3) .skill__placeholder {
    background: #FF7985; }
  .skill:nth-child(4) .skill__placeholder {
    background: #CC1481; }
  .skill:nth-child(even) {
    margin-left: 0; }
  @media (min-width: 768px) {
    .skill {
      width: 16%;
      margin-right: 12%;
      margin-left: 0;
      margin-bottom: 40px; }
      .skill:last-child {
        margin-right: 0; } }

.skill__placeholder {
  width: 100%;
  height: 0;
  padding-bottom: 100%;
  border-radius: 50%;
  margin-bottom: 20px; }

/*.skill__icon {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
	width: 100%;
	text-align: center;
}*/
.skill__title {
  color: #333;
  margin-bottom: 20px; }

.skill__intro {
  color: #333; }

/*@keyframes pulse {
    0% {
        transform: scale(0);
        opacity: 0.0;
    }
    25% {
        transform: scale(0);
        opacity: 0.2;
    }
    50% {
        transform: scale(0.1);
        opacity: 0.5;
    }
    75% {
        transform: scale(0.5);
        opacity: 0.8;
    }
    100% {
        transform: scale(1);
        opacity: 0.0;
    }
}*/
.examples {
  background: #00FF83; }

.example {
  background-color: #fff;
  /* Switch order of content in first row */ }
  .example:first-of-type {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
    -webkit-flex-direction: row-reverse;
        -ms-flex-direction: row-reverse;
            flex-direction: row-reverse;
    -webkit-box-align: start;
    -webkit-align-items: flex-start;
        -ms-flex-align: start;
            align-items: flex-start; }

.example__image {
  width: 100%; }
  @media (min-width: 768px) {
    .example__image {
      display: inline-block;
      vertical-align: top;
      width: 50%;
      margin-bottom: 0; } }

@media (min-width: 768px) {
  .example__description {
    display: inline-block;
    vertical-align: top;
    width: 50%;
    padding: 15px; } }

.interests {
  background: #fff; }

@media (min-width: 450px) {
  .interest {
    width: 50%;
    padding-bottom: 50%;
    margin-bottom: 0; } }

.contact {
  position: relative;
  overflow: hidden; }

.contact__image {
  display: inline-block;
  width: 150px;
  height: 150px;
  border-radius: 50%;
  margin: 0 auto;
  /* for alt text */
  line-height: 150px;
  text-align: center;
  color: #fff;
  background: royalblue; }
  @media (min-width: 768px) {
    .contact__image {
      position: absolute;
      top: 100%;
      right: 25px;
      -webkit-animation: slideup 2s ease 1;
              animation: slideup 2s ease 1;
      -webkit-animation-fill-mode: forwards;
              animation-fill-mode: forwards; } }

@-webkit-keyframes slideup {
  100% {
    -webkit-transform: translate(0, -120%);
            transform: translate(0, -120%); } }

@keyframes slideup {
  100% {
    -webkit-transform: translate(0, -120%);
            transform: translate(0, -120%); } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
